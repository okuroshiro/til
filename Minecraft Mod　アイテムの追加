＜src > main > java > com.okuro.OriginalMod > item > ItemOriginalSword＞　//オリジナルアイテムのクラスの作成
package com.okuro.OriginalMod.item;

import com.okuro.OriginalMod.main.OriginalMod;
import net.minecraft.world.item.Item;

public class ItemOrigianlSword extends Item {
    public ItemOrigianlSword() {
        super(new Properties().tab(OriginalMod.ORIGINALMOD_TAB));
        this.setRegistryName("original_sword");
    }
}

＜src > main > java > com.okuro.OriginalMod > item > tool > ToolOriginalPickaxe＞　//オリジナルツールのクラスの作成
package com.okuro.OriginalMod.item.tool;

import com.okuro.OriginalMod.main.OriginalMod;
import net.minecraft.nbt.CompoundTag;
import net.minecraft.network.chat.Component;
import net.minecraft.network.chat.TextComponent;
import net.minecraft.tags.BlockTags;
import net.minecraft.world.InteractionHand;
import net.minecraft.world.InteractionResultHolder;
import net.minecraft.world.entity.Entity;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.PickaxeItem;
import net.minecraft.world.item.TooltipFlag;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.state.BlockState;
import org.jetbrains.annotations.Nullable;

import java.util.List;

public class ToolOriginalPickaxe extends PickaxeItem {
    public ToolOriginalPickaxe() {
        super(OriginalModTiers.ORIGINAL,1,-2.8F,new Properties().tab(OriginalMod.ORIGINALMOD_TAB));
        this.setRegistryName("original_pickaxe");
    }

    @Override
    public void inventoryTick(ItemStack stack, Level world, Entity entity, int itemSlot, boolean isSelected) {
        if (entity.tickCount % 200 == 0){
            stack.setDamageValue(stack.getDamageValue()-5);
        }
    }

    @Override
    public InteractionResultHolder<ItemStack> use(Level world, Player player, InteractionHand hand) {
        ItemStack stack = player.getItemInHand(hand);

        if (player.isSteppingCarefully()){
            player.startUsingItem(hand);
            modeChange(stack);
            player.displayClientMessage(new TextComponent("Mode:" + modeNane(stack)),true);

            return InteractionResultHolder.consume(stack);
        }
        return InteractionResultHolder.pass(stack);
    }

    public void modeChange(ItemStack stack){
        if (stack.getTag()==null){
            stack.setTag(new CompoundTag());
        }
        stack.getTag().putInt("mode",modeInt(stack) < 1 ? modeInt(stack) + 1 : 0);
    }

    public int modeInt(ItemStack stack){
        if (stack.getTag()==null){
            return 0;
        }
        return stack.getTag().getInt("mode");
    }

    @Override
    public float getDestroySpeed(ItemStack stack, BlockState state) {
        return switch (modeInt(stack)){
            case 0 -> BlockTags.MINEABLE_WITH_PICKAXE.contains(state.getBlock())? OriginalModTiers.ORIGINAL.getSpeed():1.0F;
            case 1 -> BlockTags.MINEABLE_WITH_PICKAXE.contains(state.getBlock())? OriginalModTiers.ORIGINAL.getSpeed()*3 : 1.0F;
            default -> 0F;
        };
    }

    public String modeNane(ItemStack stack){
        return switch (modeInt(stack)){
            case 0 -> "normal";
            case 1 -> "tactical";
            default -> "unknown";
        };
    }

    @Override
    public void appendHoverText(ItemStack stack, @Nullable Level world, List<Component> list, TooltipFlag tooltip) {
        list.add(new TextComponent("Mode:" + modeNane(stack)));
    }
}

＜src > main > java > com.okuro.OriginalMod > item > tool > OriginalTiers＞  //Tierの設定
package com.okuro.OriginalMod.item.tool;

import com.okuro.OriginalMod.main.OriginalMod;
import com.okuro.OriginalMod.regi.OriginalModItems;
import com.okuro.OriginalMod.regi.OriginalModTags;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Tiers;
import net.minecraft.world.item.crafting.Ingredient;
import net.minecraftforge.common.ForgeTier;
import net.minecraftforge.common.TierSortingRegistry;

import java.util.List;

public class OriginalModTiers {

    public static final ForgeTier ORIGINAL = new ForgeTier(2,3000, 10F, 6F,10, OriginalModTags.Blocks.NEEDS_ORIGINAL_TOOL,()->Ingredient.of(OriginalModItems.ORIGIANL_SWORD));

    static {
        TierSortingRegistry.registerTier(ORIGINAL, new ResourceLocation(OriginalMod.MOD_ID,"original"), List.of(TierSortingRegistry.getName(Tiers.WOOD)),List.of());
    }
}


＜src > main > java > com.okuro.OriginalMod > regi > OriginalModItems＞  //オリジナルアイテム、オリジナルツールをアイテムクラスに追加

package com.okuro.OriginalMod.regi;

import com.okuro.OriginalMod.item.ItemOrigianlSword;
import com.okuro.OriginalMod.item.tool.ToolOriginalPickaxe;
import com.okuro.OriginalMod.main.OriginalMod;
import net.minecraft.world.item.Item;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.registries.ObjectHolder;

@ObjectHolder(OriginalMod.MOD_ID)
public class OriginalModItems {

//追加したアイテムを登録していく ↓↓↓
    public static final ItemOrigianlSword ORIGIANL_SWORD = new ItemOrigianlSword();
    public static final ToolOriginalPickaxe ORIGINAL_PICKAXE = new ToolOriginalPickaxe();

    @Mod.EventBusSubscriber(modid = OriginalMod.MOD_ID, bus = Mod.EventBusSubscriber.Bus.MOD)
    public static class Register{

        @SubscribeEvent
        public static void registerItems(final RegistryEvent.Register<Item> event){

//追加したアイテムを配列に入れていく ↓↓↓
            final Item[] items = {
                    ORIGIANL_SWORD,
                    ORIGINAL_PICKAXE
            };
            event.getRegistry().registerAll(items);
        }
    }
}


＜src > resouces > assets > originalmod > models > item> original_pickaxe.json＞　//オリジナルピッケルのモデルを定義
{
  "parent": "minecraft:item/handheld",
  "textures": {
    "layer0": "originalmod:item/original_pickaxe"
  }
}

< src > resouces > assets > originalmod >textures > item > original_sword.png >  //texturesに作ったpngファイルを追加（pngファイルの名前は必ず登録したRegistryNameと同じにする）
< src > resouces > assets > originalmod >textures > block > original_pickaxe.png > 

< src > resouces > assets > originalmod > lang >  >  //英語と日本語の名前の設定

